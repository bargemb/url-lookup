package com.cisco.exercise.service;

import com.cisco.exercise.domain.entity.MalwareURL;
import com.cisco.exercise.domain.exception.InvalidURLException;
import com.cisco.exercise.domain.repository.MalwareURLRepository;
import lombok.extern.slf4j.Slf4j;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;
import org.springframework.util.MultiValueMap;

import java.util.Optional;

@Component
@Slf4j
public class MalwareURLService {
    private final MalwareURLRepository malwareURLRepository;

    @Autowired
    public MalwareURLService(MalwareURLRepository malwareURLRepository) {
        this.malwareURLRepository = malwareURLRepository;
    }

    /**
     * Validates the input URL using combination of domain and port.
     * @param domain Domain name along with port
     * @param originalPath Resource path of original URL. Currently not used in business logic.
     * @param queryParameters Query parameters of original URL. Currently not used in business logic.
     * @throws InvalidURLException
     */
    public void validateURL(
            String domain,
            String originalPath,
            MultiValueMap<String, String> queryParameters) throws InvalidURLException
    {
        Optional<MalwareURL> malwareURL = malwareURLRepository.findById(domain);
        if (malwareURL.isPresent()) {
            log.info("Input URL with domain {} is present in database", domain);
            throw new InvalidURLException(malwareURL.get().getDomain());
        }
    }
}
